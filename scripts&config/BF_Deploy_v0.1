#!/bin/bash

#check if the script is running under root
if [ $EUID -ne 0 ]; then
	echo " This script must be run as root "
	exit 1
fi

if [ -d /opt ];then
	echo ""
else
	mkdir /opt
fi
#Environment Config  for Brownfield Deployment-PCbox
JAVA=jdk-8u151-linux-x64.tar.gz
KAFKA=kafka_2.10-0.10.1.0.tgz
MONGODB=mongodb-linux-x86_64-3.4.10.tgz
NODE=node-v6.11.3-linux-x64.tar.gz
NPM=5.5.1
FLUME=apache-flume-1.7.0-bin.tar.gz
ACTIVEMQ=apache-activemq-5.15.2-bin.tar.gz
TOMCAT=apache-tomcat-8.5.24.tar.gz

FLUME_CONF_FILE=flume-brownfield.properties
#SERVICE=brownfield

#Download Server
#INTRANET_SERVER=139.24.161.146:8000
INTRANET_SERVER=139.24.140.251:8000
INTERNET_SERVER=222.92.47.141:8081
PROXY_SERVER=10.193.12.222:63128
#PROXY SETTING FOR APT
APTLOCATION=`pwd`/apt_proxy_conf

#CHECK NETWORK
NET_STATUS="offline"
ping -c 1 `echo $INTERNET_SERVER|cut -d ":" -f1` > /dev/null 2>&1
if [ $? -eq 0 ];then
	NET_STATUS="Internet"
else
	ping -c 1 `echo $INTERANET_SERVER|cut -d ":" -f1` > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		NET_STATUS="Intranet"
	else 
	ping -c 1 `echo $PROXY_SERVER|cut -d ":" -f1` > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		NET_STATUS="Proxy"
	fi
	fi
fi

echo "$NET_STATUS"


function installJava() {
echo "********Begin Install Java"
if [ -f `pwd`/$JAVA ];then
#	tar -zxvf $JAVA -C /opt
	java -version >/dev/null 2>&1
	if [ $? = 0 ];then
		echo "Java is already installed"
	else
	#rm -rf /opt/`ls /opt|grep jdk`
	tar -zxvf $JAVA -C /opt
	JAVA_HOME=/opt/`ls /opt|grep jdk`
	update-alternatives --install /usr/bin/java java $JAVA_HOME/bin/java 500	
	update-alternatives --install /usr/bin/jar jar $JAVA_HOME/bin/jar 500
	update-alternatives --install /usr/bin/javac javac $JAVA_HOME/bin/javac 500
	update-alternatives --install /usr/bin/javah javah $JAVA_HOME/bin/javah 500
	update-alternatives --install /usr/bin/javap javap $JAVA_HOME/bin/javap 500
	if [ -f /etc/profile.d/BF_DP.sh ];then
	rm -f /etc/profile.d/BF_DP.sh
	fi
	tee >>/etc/profile.d/BF_DP.sh<<EOF
export JAVA_HOME=$JAVA_HOME
export JRE_HOME=$JAVA_HOME/jre
export PATH=\$PATH:\$JAVA_HOME/bin:\$JRE_HOME/bin
EOF
	chmod 644 /etc/profile.d/BF_DP.sh
	#export PATH=\$PATH:\$JAVA_HOME/bin:\$JRE_HOME/bin
	echo "******** JAVA Installation Complete"
	fi
else
	echo "********Installation Package not found in local folder"
fi
}

installJava

# Install Kafka
function installKafka() {
echo "******* Begin Install Kafka"
if [ -e `pwd`/$KAFKA ];then
	ls /opt|grep kafka >/dev/null 2>&1
	if [ $? -eq 0 ];then
		echo "Kafka is existed,********"
		#rm -rf /opt/`ls /opt|grep kafka`
		#tar -zxvf $KAFKA -C /opt
	elif [ $? -ne 0 ];then
		tar -zxvf $KAFKA -C /opt
		echo " Kafka installation complete "
    fi
  # if [ $1 -eq 0 ];then
    # rm -f $KAFKA
  # fi
  # echo "******* Kafka Installation Done"
# elif [ $NET_STATUS = "Intranet" ];then
  # curl -O $INTRANET_SERVER/$KAFKA
  # installKafka 0
# elif [ $NET_STATUS = "Internet" ];then
  # curl -O $INTERNET_SERVER/$KAFKA
  # installKafka 0
# else
  # echo "******* Kafka Installation Failed"
  # exit 1
  else
	echo "Kafka installation failed"	
fi

}

installKafka

function installNode(){
echo "********Begin Install Node"
if [ -f `pwd`/$NODE ];then
		node -v >/dev/null 2>&1
		if [ $? = 0 ]; then
			echo "Nodejs is installed"
		else
		#tar --strip-components 1 -zxvf $NODE -C /usr/local
		#xz -d $NODE
		tar --strip-components 1 -xvf $NODE -C /usr/local 
		echo "********Nodejs Installation Complete"
		fi	
else
	echo "********Installation Package not found in local folder"
fi
}

installNode

#Please run another script npmconfig.sh to config npm

function installMongodb(){
echo "********Begin Install Mongodb"
if [ -f `pwd`/$MONGODB ];then
	mongo -version >/dev/null 2>&1
	if [ $? = 0 ];then
		echo "Mongodb is installed"
	else
	tar -zxvf $MONGODB -C /opt
	tee>>/etc/profile.d/BF_DP.sh<<EOF
export PATH=\$PATH:/opt/`ls /opt|grep mongo`/bin
EOF
	mkdir -p /data/db
	echo "********Mongodb Installation Complete"
	fi
else
	echo "********Installation Package Not Found In Local Folder"
fi
} 

installMongodb

function installTomcat(){
echo "*******Begin Install Tomcat"
if [ -f `pwd`/$TOMCAT ];then
	ls /opt|grep tomcat >/dev/null 2>&1
	if [ $? -eq 0 ];then
		echo "Tomcat is existed******"
	else
		tar -zxvf $TOMCAT -C /opt/
	fi
	echo "******Tomcat Installation Complete"
else
	echo "******Installation Package Not Found In Local Folder"
fi
}

installTomcat



# Install Flume
function installFlume() {
echo "******* Begin Install Flume"
if [ -e `pwd`/$FLUME ];then
	ls /opt|grep flume >/dev/null 2>&1
	 if [ $? -eq 0 ];then
		 echo "Flume is existed, ********"
		 #rm -rf /opt/`ls /opt|grep flume`
		 #tar -zxvf $FLMUE -C /opt
	 else
	    tar -zxvf $FLUME -C /opt
    fi
  #cp $FLUME_CONF_FILE /opt/`ls /opt|grep flume`/conf
  # if [ $1 -eq 0 ];then
    # rm -f $FLUME
  # #mv $FLUME_CONF_FILE /opt/`ls /opt|grep flume`/conf
  # fi
  echo "******** Flume Installation Done"
elif [ $NET_STATUS = "Intranet" ];then
  curl -O $INTRANET_SERVER/$FLUME
  curl -O $INTRANET_SERVER/$FLUME_CONF_FILE
  installFlume 0
elif [ $NET_STATUS = "Internet" ];then
  curl -O $INTERNET_SERVER/$FLUME
  curl -O $INTERNET_SERVER/$FLUME_CONF_FILE
  installFlume 0
else
  echo "******* Flume Installation Failed"
  exit 1
fi
}

installFlume

# Install ActiveMQ
function installActiveMQ() {
echo "******* Begin Install ActiveMQ"
ls /opt|grep activemq >/dev/null 2>&1
if [ -e `pwd`/$ACTIVEMQ ];then
  	if [ $? -eq 0 ];then
		 echo "ActiveMq is existed, *******"
		# rm -rf /opt/`ls /opt|grep activemq`
		# tar -zxvf $ACTIVEMQ -C /opt
	else
		tar -zxvf $ACTIVEMQ -C /opt
	fi
  # if [ $1 -eq 0 ];then
    # rm -f $ACTIVEMQ
  # fi
  echo "****** ActiveMQ Installation Done"
elif [ $NET_STATUS = "Intranet" ];then
  curl -O $INTRANET_SERVER/$ACTIVEMQ
  installActiveMQ 0
elif [ $NET_STATUS = "Internet" ];then
  curl -O $INTERNET_SERVER/$ACTIVEMQ
  installActiveMQ 0
else
  echo "******* ActiveMQ Installation Failed"
  exit 1
fi
}

installActiveMQ

# # Set zookeeper, kafka and flume as system service brownfield
# function setService() {
# echo "******* Set service brownfield"
# if [ -e `pwd`/$SERVICE ];then
# #sed -i "s/flume-brownfield.properties/$FLUME_CONF_FILE/g" $SERVICE
  # #cp $SERVICE /etc/init.d/
  # #chmod +x /etc/init.d/$SERVICE
  # #chkconfig --add /etc/init.d/$SERVICE
# elif [ $NET_STATUS = "Intranet" ];then
  # curl -O $INTRANET_SERVER/$SERVICE
  # setService
# elif [ $NET_STATUS = "Internet" ];then
  # curl -O $INTERNET_SERVER/$SERVICE
  # setService
# else
  # echo "****** Set Service Failed"
  # exit 1
# fi
# }

# setService
FLUMEPLUGIN=brownfield-flume-kafka-interceptor-0.1-jar-with-dependencies.jar

if [ -e ../properties/$FLUMEPLUGIN ];then
	cp ../properties/$FLUMEPLUGIN /opt/`ls /opt|grep flume`/lib
	echo "FlumePlugin			[OK]"
else
	echo "FlumePlugin not found"
fi
if [ -e ../properties/flume-brownfield.properties ];then
	cp ../properties/flume-brownfield.properties /opt/`ls /opt|grep flume`/conf
	echo "Flume-brownfield		[OK]"
else
	echo "Flume Properties not found, Please setup manually"
fi
if [ -e ../properties/server.properties ];then
	cp ../properties/server.properties /opt/`ls /opt|grep kafka`/config
	echo "KafkaSetting			[OK]"
else 
	echo "Kafka Properties not set, Please setup manually"
fi


source /etc/profile.d/BF_DP.sh
